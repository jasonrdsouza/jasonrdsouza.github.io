{"title":"AWS Tricks","tags":["aws","s3","boto3","iam","ebs"],"template":"spell.mustache","CORK_url":"spells/aws.html","CORK_reading_time":2,"content":"<h3 id=\"find-and-clean-up-incomplete-multi-part-uploads\">Find and clean up incomplete multi-part uploads</h3>\n<pre><code class=\"language-bash\"># List incomplete uploads\naws --profile PROFILE_NAME s3api list-multipart-uploads --bucket BUCKET_NAME\n# Abort incomplete uploads (and remove any temporary files)\naws --profile personal s3api abort-multipart-upload --bucket BUCKET_NAME --key KEY_NAME --upload-id UPLOAD_ID\n</code></pre>\n<h3 id=\"using-aws-roles\">Using AWS Roles</h3>\n<p>Incantation to use boto with a specific profile from your <code>.aws/credentials</code> file:</p>\n<pre><code class=\"language-python\">import boto3\n\nsession = boto3.Session(profile_name='NAME_OF_PROFILE_IN_CREDENTIALS_FILE')\ndynamoClient = session.client('dynamodb')\n</code></pre>\n<p>Using a profile in java:</p>\n<pre><code class=\"language-java\">import com.amazonaws.services.s3.AmazonS3Client\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider\n\nval s3Client = new AmazonS3Client(new ProfileCredentialsProvider(\"sandbox\"))\n</code></pre>\n<h3 id=\"formatting-and-mounting-an-ebs-volume\">Formatting and Mounting an EBS Volume</h3>\n<pre><code class=\"language-bash\"># View available disk devices and their mount points\n~$ lsblk\n# Check if the device already has a file system\n~$ sudo file -s /dev/xvdb\n# If there is no file system, create one like so\n~$ sudo mkfs -t ext4 /dev/xvdb\n# Create a mount point, and mount the volume\n~$ sudo mkdir /data\n~$ sudo mount /dev/xvdb /data\n# Check that the volume was mounted properly\n~$ df -h\n</code></pre>\n<p>Dont forget to change permissions/ ownership of the mount point depending on\nwho/ what needs to write to it.</p>\n"}