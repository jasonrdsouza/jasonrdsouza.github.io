<h2 id="jq-command-line-json-parser">JQ Command Line JSON Parser</h2>
<p><a href="https://stedolan.github.io/jq/">https://stedolan.github.io/jq/</a></p>
<h3 id="extract-specific-field-from-json-array-of-dicts">Extract specific field from JSON Array of Dicts</h3>
<pre><code class="language-bash">jq ".ArrayKey[].SpecificFieldInDict"
</code></pre>
<h3 id="print-strings-without-quotes">Print strings without quotes</h3>
<pre><code class="language-bash">jq --raw-output ".id"
</code></pre>
<h3 id="make-each-json-object-only-take-up-1-line">Make each JSON object only take up 1 line</h3>
<pre><code class="language-bash"># Quickly count how many objects there are
jq ".events[].message" --compact-output | wc -l
</code></pre>
<h3 id="get-a-range-of-a-json-array">Get a range of a JSON array</h3>
<pre><code class="language-bash">jq ".events[0:6]"
</code></pre>
<h3 id="extract-set-of-fields-from-larger-dict">Extract set of fields from larger dict</h3>
<pre><code class="language-bash">jq '{desiredName: .fieldName, otherField: .arrayField[0].field, etc: .otherField}'

# Real world example extracting video properties from larger JSON dict
# the -s directive tells JQ to treat jsonlines format as if it were a JSON array
cat movie_list.json | jq -c '{filename: .format.filename, width: .streams[0].width, height: .streams[0].height}' | jq -s 'sort_by(.height)' &gt; resolution_sorted_movie_list.json
</code></pre>
