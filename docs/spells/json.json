{"title":"JSON Spells","tags":["jq","cli"],"template":"spell.mustache","CORK_url":"spells/json.html","CORK_reading_time":2,"CORK_lix_readability_score":28,"CORK_ari_readability_score":8,"content":"<h2 id=\"jq-command-line-json-parser\">JQ Command Line JSON Parser</h2>\n<p><a href=\"https://stedolan.github.io/jq/\">https://stedolan.github.io/jq/</a></p>\n<h3 id=\"extract-specific-field-from-json-array-of-dicts\">Extract specific field from JSON Array of Dicts</h3>\n<pre><code class=\"language-bash\">jq &quot;.ArrayKey[].SpecificFieldInDict&quot;\n</code></pre>\n<h3 id=\"print-strings-without-quotes\">Print strings without quotes</h3>\n<pre><code class=\"language-bash\">jq --raw-output &quot;.id&quot;\n</code></pre>\n<h3 id=\"make-each-json-object-only-take-up-1-line\">Make each JSON object only take up 1 line</h3>\n<pre><code class=\"language-bash\"># Quickly count how many objects there are\njq &quot;.events[].message&quot; --compact-output | wc -l\n</code></pre>\n<h3 id=\"get-a-range-of-a-json-array\">Get a range of a JSON array</h3>\n<pre><code class=\"language-bash\">jq &quot;.events[0:6]&quot;\n</code></pre>\n<h3 id=\"extract-set-of-fields-from-larger-dict\">Extract set of fields from larger dict</h3>\n<pre><code class=\"language-bash\">jq '{desiredName: .fieldName, otherField: .arrayField[0].field, etc: .otherField}'\n\n# Real world example extracting video properties from larger JSON dict\n# the -s directive tells JQ to treat jsonlines format as if it were a JSON array\ncat movie_list.json | jq -c '{filename: .format.filename, width: .streams[0].width, height: .streams[0].height}' | jq -s 'sort_by(.height)' &gt; resolution_sorted_movie_list.json\n</code></pre>\n"}