{"title":"Unix Spells","tags":["cli","less","bash","fish"],"template":"spell.mustache","CORK_url":"spells/unix.html","CORK_reading_time":2,"CORK_lix_readability_score":29,"CORK_ari_readability_score":6,"content":"<h2 id=\"general\">General</h2>\n<h3 id=\"check-network-utilization\">Check Network Utilization</h3>\n<pre><code class=\"language-bash\">sudo iftop -B\n</code></pre>\n<h3 id=\"process-substitution\">Process Substitution</h3>\n<p>Creating a named pipe is done in <a href=\"https://fishshell.com/\">fish</a> with the <code>psub</code> command as follows:</p>\n<pre><code>diff (sort a.txt | psub) (sort b.txt | psub)\n</code></pre>\n<p>References: <code>man psub</code></p>\n<h3 id=\"extract-and-pretty-print-stack-trace-from-logback-logs\">Extract and Pretty Print Stack Trace from Logback Logs</h3>\n<pre><code class=\"language-bash\">cat tmp | jq &quot;.stack_trace&quot; | xargs printf\n</code></pre>\n<h2 id=\"less\">Less</h2>\n<p>Tips and tricks with less</p>\n<h3 id=\"display-ansi-color-codes\">Display ANSI color codes</h3>\n<pre><code class=\"language-bash\">less -R\n</code></pre>\n<h3 id=\"display-line-numbers\">Display Line Numbers</h3>\n<pre><code class=\"language-bash\">less -N\n</code></pre>\n<p>All these less commands can be passed in as args, or when already in less.\nAlso, some of the search and movement syntax of vim works in less as well.</p>\n<h2 id=\"tcpdump\">Tcpdump</h2>\n<h3 id=\"direct-usage\">Direct Usage</h3>\n<p>To make the output legible, as well as manageable, make sure to</p>\n<ol>\n<li>specify the port you care about</li>\n<li>use the -XX and -i flags to get ascii output next to the binary</li>\n</ol>\n<pre><code class=\"language-bash\">sudo tcpdump -XX -i eth0 port 44380 &gt; /tmp/dump\n</code></pre>\n<h3 id=\"pretty-print-pcap-file\">Pretty Print PCAP file</h3>\n<p>If you have an existing PCAP file (for example, from <a href=\"https://www.wireshark.org/\">wireshark</a>), you can run it through tcpdump to pretty print the contents as follows:</p>\n<pre><code class=\"language-bash\">tcpdump -qns 0 -X -r file.pcap\n</code></pre>\n<h2 id=\"find\">Find</h2>\n<h3 id=\"list-files-with-specific-extension-and-perform-command-on-them\">List files with specific extension and perform command on them</h3>\n<pre><code class=\"language-bash\"># In this case, list video files and for each one, extract metadata\nfind . -type f \\( -iname \\*.mkv -o -iname \\*.mp4 -o -iname \\*.avi \\) -print0 | while IFS= read -r -d '' file; do\n  ffprobe -v quiet -print_format json -show_format -show_streams $file;\ndone &gt; ~/video_metadata.json\n</code></pre>\n"}